@page "/propertydetails/{PropertyId}"
@using Blazorise
@using RealEstatePlatform.App.Contracts
@using RealEstatePlatform.App.ViewModels

<link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.0/dist/css/bootstrap.min.css" integrity="...">
<script src="https://unpkg.com/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="..."></script>

<style>
    .property-details-container {
        width: 80vw;
        height: 85vh;
        margin-top: 5vh;
        overflow-y: scroll;
        padding: 40px;
        background-color: #f8f8f8;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .property-name {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 15px;
        color: #333;
    }

    .property-info {
        display: flex;
        justify-content: space-between;
    }

    .property-info-section {
        flex: 1;
    }

    .property-info-item {
        margin-bottom: 5px;
        color: #555;
    }

    .property-var-name {
        flex: 1;
        padding-left: 20px;
    }

    .amenities-title {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
    }

    .title-label{
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
    }

    .amenities-list {
        list-style: disc;
        padding-left: 0;

    }

    .amenity-item {
        color: #666;
        margin-bottom: 5px;
    }

    .no-property-details {
        text-align: center;
        font-size: 18px;
        color: #555;
        margin-top: 20px;
    }

    .property-image-slider {
        margin-top: 20px;
    }

    .carousel-item img {
        width: 100%;
        border-radius: 10px;
    }

</style>
@if (PropertyDetails != null)
{
    <div class="property-details-container">
        <div class="row">
            <h3 class="property-name">@PropertyDetails.PropertyName</h3>
            <div class="col-md-6">
                <!-- Property Information -->
                <div class="property-info">
                    <div class="property-info-section">
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Area:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Area sqft</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Bedrooms:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Bedrooms</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Bathrooms:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Bathrooms</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Property Type:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@GetPropertyTypeName(PropertyDetails.PropertyTypeId)</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Listing Type:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@GetListingTypeName(PropertyDetails.ListingTypeId)</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Location:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Location</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Price:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Price</p>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4">
                                <label class="property-info-label">Owner Username:</label>
                            </div>
                            <div class="col-sm-8">
                                <p class="property-info-item">@PropertyDetails.Username</p>
                            </div>
                        </div>
                      
                    </div>
                </div>
            </div>


            <div class="col-md-5">
                <!-- Image Gallery -->
                @if (Images.Count >= 1)
                {
                    <div class="property-img">
                        <!-- Large Image -->
                        <img src="@Images[index].ImageData" alt="Large Image" class="img-fluid" />

                        <!-- Thumbnails -->
                        <div class="thumbnails">
                            @foreach (var image in Images)
                            {
                                <img src="@image.ImageData" alt="Thumbnail Image" class="thumbnail" @onclick="(() => SetSelectedImage(image))" />
                            }
                        </div>
                    </div>
                }

                @code {
                private int index = 0;

                private void SetSelectedImage(ImageViewModel image)
                {
                    // Set the selected image when a thumbnail is clicked
                    index = Images.IndexOf(image);
                }
            }
        </div>

        <style>
            .thumbnails {
                display: flex;
                justify-content: left;
                margin-top: 10px;
                overflow-y: scroll;
            }

            .thumbnail {
                width: 50px;
                height: auto;
                cursor: pointer;
                margin-right: 5px;
                filter: grayscale(100%);

            }

            .thumbnail:hover {
                transform: scale(1.1);
            }
        </style>


         </div>
            <div class="row mb-3">
                <div class="col-sm-4">
                    <label class="property-info-label">Description:</label>
                </div>
                <div class="col-sm-12">
                    <p class="property-info-item">@PropertyDetails.Description sqft</p>
                </div>
            </div>
        <div class="d-flex justify-content-center mt-4" style="margin-bottom:20px">
            <button class="btn btn-primary btn-add" style="margin-bottom: 20px;" @onclick="() => NavigateToInbox(PropertyDetails.Username)">Contact Owner</button>

        </div>
       

        @if (Images == null || !Images.Any())
        {
            <p class="no-property-details">No property images details available.</p>
        }
    </div>
}
else
{
    <p>No property details available.</p>
}


@code {

    [Inject]
    public IPropertyDataService PropertyDataService { get; set; }

    [Inject]
    public IPropertyTypeDataService PropertyTypeDataService { get; set; }

    [Inject]
    public IListingTypeDataService ListingTypeDataService { get; set; }

    [Inject]
    public IImageDataService ImageDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public List<PropertyTypeViewModel> PropertyTypes { get; set; }

    public List<ListingTypeViewModel> ListingTypes { get; set; }

    public List<ImageViewModel> Images { get; set; }


    [Parameter]
    public string PropertyId { get; set; }

    private PropertyViewModel PropertyDetails { get; set; }

    private string GetPropertyTypeName(Guid propertyTypeId)
    {
        var propertyType = PropertyTypes.FirstOrDefault(pt => pt.PropertyTypeId == propertyTypeId);
        return propertyType?.PropertyTypeName ?? "";
    }

    private string GetListingTypeName(Guid listingTypeId)
    {
        var listingType = ListingTypes.FirstOrDefault(pt => pt.ListingTypeId == listingTypeId);
        return listingType?.ListingTypeName ?? "";
    }

    protected override async Task OnInitializedAsync()
    {
        ListingTypes = (await ListingTypeDataService.GetListingTypesAsync()).ToList();
        PropertyTypes = (await PropertyTypeDataService.GetPropertyTypesAsync()).ToList();
        var GuidPropertyId = Guid.Parse(PropertyId);
        Images = (await ImageDataService.GetImagesByPropertyIdAsync(GuidPropertyId)).ToList();

        Console.WriteLine($"Id: {PropertyId}");
        Console.WriteLine($"Images: {Images.Count}");
        // Convert the PropertyId string to a Guid or your property's ID type
        if (!string.IsNullOrEmpty(PropertyId) && Guid.TryParse(PropertyId, out Guid propertyGuid))
        {
            
            PropertyDetails = await PropertyDataService.GetPropertyByIdAsync(propertyGuid);
           
        }
    }

    protected void NavigateToInbox(string userName)
    {
        NavigationManager.NavigateTo($"/inbox/{userName}");
    }
}
