@page "/login"
@using RealEstatePlatform.App.Auth
@using RealEstatePlatform.App.ViewModels
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject IJSRuntime JSRuntime

<style>
    .custom-card {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
        padding: 20px;
        margin: 20px auto;
        max-width: 80%;
    }

    .login-title{
        font-weight: 600;
text-align: center;
        color: #116466;
    }
</style>

<div class="custom-card">
    <div class="card-body">
        <h1 class="h2 font-weight-normal login-title">
            Login
        </h1>

        <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
            <DataAnnotationsValidator />

            <label for="inputUsername" class="sr-only">Username</label>
            <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.Username" autofocus placeholder="Username" />
            <ValidationMessage For="@(() => loginRequest.Username)" />

            <label for="inputPassword" class="sr-only">Password</label>
            <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginRequest.Password" />
            <ValidationMessage For="@(() => loginRequest.Password)" />

            <br />

            <button class="btn btn-lg btn-primary btn-block mt-3" type="submit" onclick="OnClickHandler">Log in</button>

            <label class="text-danger">@error</label>

            <NavLink href="register">
                <h6 class="font-weight-normal text-center">Create account</h6>
            </NavLink>
        </EditForm>

    </div>
</div>


@code {
    LoginViewModel loginRequest { get; set; } = new LoginViewModel();
    string error { get; set; }
    

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest, JSRuntime);
            navigationManager.NavigateTo("/profile");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}