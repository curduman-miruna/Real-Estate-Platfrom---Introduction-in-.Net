@using RealEstatePlatform.App.Contracts
@using RealEstatePlatform.App.ViewModels
<!-- PredictionPage.razor -->


<div class="d-flex justify-content-center" style="margin-bottom:20px">
<h2>Prediction Page</h2>
</div>

<div class="row mb-3 ms-2">
    <label class="col-sm-3 form-label" for="bedrooms">Bedrooms:</label>
    <div class="col-sm-8">
        <input type="number" class="form-control"  id="bedrooms" @bind="@inputModel.Bedrooms" />
    </div>
</div>

<div class="row mb-3 ms-2">
    <label class="col-sm-3 form-label" for="bathrooms">Bathrooms:</label>
    <div class="col-sm-8">
        <input type="number"  class="form-control" id="bathrooms" @bind="@inputModel.Bathrooms" />
    </div>
</div>

<div class="row mb-3 ms-2">
    <label class="col-sm-3 form-label" for="sqftLiving">Sqft Living:</label>
    <div class="col-sm-8">
        <input type="number"  class="form-control" id="sqftLiving" @bind="@inputModel.Sqft_living" />
    </div>
</div>

<div class="d-flex justify-content-center mt-4" style="margin-bottom:20px">
<button class="btn btn-primary btn-add" style="margin-bottom: 20px;" @onclick="PerformPrediction">Predict</button>
</div>

@if (outputModel != null)
{
    <div class="row mb-3 ms-2">
        <label class="col-sm-3 form-label" for="price">Predicted price (dollars):</label>
        <div class="col-sm-8">
            <input type="number" class="form-control" id="price" @bind="@outputModel.Score" readonly/>
        </div>
    </div>
}

@code {
    private MLInputModel inputModel = new MLInputModel();
    private MLOutputModel outputModel;

    [Inject]
    private IMLDataService mlDataService { get; set; }

    private async Task PerformPrediction()
    {
        inputModel.Price= 0;
        outputModel = await mlDataService.Predict(inputModel);
    }
}
